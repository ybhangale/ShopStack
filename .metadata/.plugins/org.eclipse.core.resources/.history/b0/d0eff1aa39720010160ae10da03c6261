package com.shopstack.service;

import com.shopstack.dto.CartResponseDto;
import com.shopstack.models.*;
import com.shopstack.repositories.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class CartServiceImpl implements CartService {

    @Autowired
    private CartItemRepository cartItemRepo;

    @Autowired
    private ProductRepository productRepo;

    @Autowired
    private UserRepository userRepo;

    @Override
    public CartItem addToCart(Long productId, int quantity, String username) {
        User user = userRepo.findByUsername(username).orElseThrow();
        Product product = productRepo.findById(productId).orElseThrow();

        // ✅ Check for duplicate product
        CartItem existing = cartItemRepo.findByUserAndProduct(user, product);
        if (existing != null) {
            existing.setQuantity(existing.getQuantity() + quantity);
            return cartItemRepo.save(existing);
        }

        CartItem item = new CartItem();
        item.setProduct(product);
        item.setQuantity(quantity);
        item.setUser(user);
        return cartItemRepo.save(item);
    }

    @Override
    public CartResponseDto getUserCart(String username) {
        User user = userRepo.findByUsername(username).orElseThrow();
        List<CartItem> items = cartItemRepo.findByUser(user);

        // ✅ Calculate total price
        double total = 0;
        for (CartItem item : items) {
            total += item.getProduct().getPrice() * item.getQuantity();
        }

        return new CartResponseDto(items, total);
    }

    @Override
    public void removeFromCart(Long cartItemId, String username) {
        cartItemRepo.deleteById(cartItemId);
    }

    @Override
    public void clearCart(String username) {
        User user = userRepo.findByUsername(username).orElseThrow();
        cartItemRepo.deleteByUser(user);
    }
}
